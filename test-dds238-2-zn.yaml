substitutions:
  friendly_name: "test-dds238"
  friendly_name_wifiap: "test-dds238-Hotspot"
  interval_update_court: "10s"
  interval_update_normal: "120s"
  interval_update_long: "300s"
  reboot_time: "300min"

esphome:
  name: test-dds238-2-zn
  friendly_name: test-dds238-2-zn

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "WF0x+wj3AFxqMx4kgWOTJP6uA6+IYmJSkO21Lq7TgVI="

ota:
  password: "7aefbfe33d091034c2f807f6f6caac5a"

wifi:
  networks:
  - ssid: !secret wifi_maison_ssid
    password: !secret wifi_maison_password
  - ssid: !secret wifi_maison_2_ssid
    password: !secret wifi_maison_2_password
  reboot_timeout : ${reboot_time} #reboot si pas de wifi actif
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name_wifiap}"
    password: !secret wifi_esp_ap_password


captive_portal:

#--------------------------------------
#--------------------------------------
web_server:
  port: 80
  version: 2

uart:
  id: mod_bus
  tx_pin: 17
  rx_pin: 16
  baud_rate: 9600
  stop_bits: 1

modbus:
  #send_wait_time: 500ms
  #flow_control_pin: 5
  id: modbus1
  #uart_id: mod_bus

modbus_controller:
  - id: hikingdds238_general
    ## the Modbus device addr
    address: 0x1
    modbus_id: modbus1
    setup_priority: -10
    update_interval: 5s

sensor:
  - platform: modbus_controller
    modbus_controller_id: hikingdds238_general
    name: "Voltage"
    id: Voltage
    register_type: holding
    address: 0x000C
    unit_of_measurement: "V"
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1 #1/10

  - platform: modbus_controller
    modbus_controller_id: hikingdds238_general
    name: "Current"
    id: Current
    register_type: holding
    address: 0x000D
    unit_of_measurement: "A"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
    - multiply: 0.01 #1/100

  - platform: modbus_controller
    modbus_controller_id: hikingdds238_general
    name: "Puissance"
    id: Puissance
    register_type: holding
    address: 0x000E
    unit_of_measurement: "W"
    value_type: S_WORD
    #accuracy_decimals: 2
    #filters:
    #- multiply: 0.01 #1/100

  - platform: modbus_controller
    modbus_controller_id: hikingdds238_general
    name: "Puissance Apparente"
    id: Puissance_Apparente
    register_type: holding
    address: 0x000F
    unit_of_measurement: "var"
    value_type: U_WORD
    #accuracy_decimals: 2
    #filters:
    #- multiply: 0.01 #1/100

  - platform: modbus_controller
    modbus_controller_id: hikingdds238_general
    name: "Facteur Puissance"
    id: Facteur_Puissance
    register_type: holding
    address: 0x0010
    #unit_of_measurement: "var"
    value_type: U_WORD
    #accuracy_decimals: 2
    filters:
    - multiply: 0.001 #1/1000

  - platform: modbus_controller
    modbus_controller_id: hikingdds238_general
    name: "Frequence"
    id: Frequence
    register_type: holding
    address: 0x0011
    unit_of_measurement: "Hz"
    value_type: U_WORD
    accuracy_decimals: 2
    filters:
    - multiply: 0.01 #1/100

  - platform: modbus_controller
    modbus_controller_id: hikingdds238_general
    name: "Energy Total"
    id: Energy_Total
    register_type: holding
    address: 0x0000
    state_class: "total_increasing"
    device_class: "energy"
    unit_of_measurement: "kWh"
    value_type: U_DWORD
    accuracy_decimals: 2
    filters:
    - multiply: 0.01 #1/100

  - platform: modbus_controller
    modbus_controller_id: hikingdds238_general
    name: "Energy Export"
    id: Energy_Export
    register_type: holding
    address: 0x0008
    state_class: "total_increasing"
    device_class: "energy"
    unit_of_measurement: "kWh"
    value_type: U_DWORD
    accuracy_decimals: 2
    filters:
    - multiply: 0.01 #1/100

  - platform: modbus_controller
    modbus_controller_id: hikingdds238_general
    name: "Energy Import"
    id: Energy_Import
    register_type: holding
    state_class: "total_increasing"
    device_class: "energy"
    address: 0x000A
    unit_of_measurement: "kWh"
    value_type: U_DWORD
    accuracy_decimals: 2
    filters:
    - multiply: 0.01 #1/100    

switch:
  #https://community.home-assistant.io/t/schneider-iem3155-energy-meter-sending-modbus-custom-command/444952/4
  - platform: modbus_controller
    modbus_controller_id: hikingdds238_general
    name: "Reset command"
    id: reset_partial
    custom_command: [ 0x01, 0x10, 0x00, 0x0a, 0x00, 0x02, 0x04, 0x00, 0x00 ]

#text_sensor:
#  - name: "rtc_clock"
#    platform: modbus_controller
#    modbus_controller_id: hikingdds238_general
#    id: rtc_clock
#    internal: true
#    register_type: holding
#    address: 0x000c
#    register_count: 3
#    raw_encode: HEXBYTES
#    response_size: 6

#switch:
#  - platform: modbus_controller
#    modbus_controller_id: hikingdds238_general
#    id: reset_to_fabric_default
#    name: "Reset to Factory Default"
#    register_type: coil
#    address: 0x15
#    bitmask: 1

text_sensor:
#--------------------------------------
#wifi   
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} Local IP"
    ssid:
      name: "${friendly_name} SSID"

#----------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------
#bouton
button:
  - platform: restart
    name: "${friendly_name} Restart"

    